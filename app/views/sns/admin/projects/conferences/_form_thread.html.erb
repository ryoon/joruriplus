<script type="text/javascript" src="/_common/js/swfupload/swfupload.js"></script>
<script type="text/javascript" src="/_common/js/swfupload/plugins/swfupload.queue.js"></script>
<script type="text/javascript" src="/_common/js/swfupload/plugins/fileprogress.js"></script>
<script type="text/javascript" src="/_common/js/swfupload/plugins/handlers.js"></script>
<script type="text/javascript" src="/_common/js/dump.js"></script>
<%= javascript_include_tag("/_common/js/tiny_mce/tiny_mce_src.js") %>
<%= javascript_include_tag("/_common/js/tiny_mce/init_html_sns.js") %>
  <div id="feedForms">
  <% form_for :thread, :html => { :multipart => true , :onsubmit=>"" , :style=>"display: none;", :id=>"threadForm"},
    :url => {:controller=>"sns/admin/projects/conferences", :action => :create, :parent=>@project_code} do |f| %>
    <%= f.error_messages %>
    <%= render :partial => "sns/admin/projects/conferences/common_form", :locals=>{:f=>f, :upload_style=>"display: none;", :submit_str=>"発言する"}%>
  <%end%>
  </div>

<script type="text/javascript">
//<![CDATA[
jQuery.noConflict();
jQuery(document).ready(function($){
  // ここでは、$はjQueryとして使えます。
  $("#thredFormOpen").click(function () {
    $("#threadForm").toggle();
    var thredStr = $(this).text();
    if (thredStr == "閉じる"){
      $(this).text("発言する");
    }else{
      $(this).text("閉じる");
    }
  });
});


function submitComment(id){
  document.body.style.cursor = 'wait';
  var alertArr = [];
  var validate = true;
  //var commnentBodyArea = $('comment_body_' + id);
  //var frame = commnentBodyArea.nextSibling.getElementsByTagName('iframe')[0];
  //var bodyText =  frame.contentDocument.body.innerHTML;
  var p_parentNode = $('photoID' + id);
  var photoIdFields = p_parentNode.getElementsByTagName('input');
  if(photoIdFields.length > <%=photo_limit%> ){
    validate = false;
    alertArr.push("フォトは最大<%=photo_limit%>件までしか登録できません。");
  }
  var f_parentNode = $('fileID' + id);
  var photoIdFields = f_parentNode.getElementsByTagName('input');
  if(photoIdFields.length > 5 ){
    validate = false;
    alertArr.push("ファイルは最大5件までしか登録できません。");
  }
  var bodyText =  $('comment_body_' + id).value;
  if(isBlanckCheck(bodyText)==true){
      validate = false;
      alertArr.push("コメントが入力されていません。");
  }
  var fileCheck = fileSizeSum('uploadedFiles'+id);
  if (fileCheck == false){
    validate = false;
    alertArr.push("ファイル容量制限をオーバーしています。");
  }
  if (validate){
    //$('comment_body_' + id).value = bodyText ;
    return true;
  }else{
    var alertMessage= "";
    for(var n =0; n < alertArr.length; n++){
      alertMessage +=  alertArr[n];
      if(n != alertArr.length - 1){
        alertMessage += "\n"
      }
    }
    document.body.style.cursor = 'auto';
    alert(alertMessage);
    return false;
  }
}

var is_photo_open = false;
var is_file_open = false;

var form_change = function(value) {

  if (value=='photo'){
    is_photo_open = true;
    $('swfupButtons').setStyle('display: inline;');
    $('swfBox1').setStyle('display: inline;');
    //if(is_file_open==false){
      $('swfBox2').setStyle('display: none;');
    //}
    $('video_form').setStyle('display: none;');
  }else if (value=='video'){
    $('video_form').setStyle('display: inline;');
    $('swfupButtons').setStyle('display: none;');
    $('swfBox1').setStyle('display: none;');
    $('swfBox2').setStyle('display: none;');
  }else if (value=='file'){
    is_file_open = true;
    $('swfupButtons').setStyle('display: inline;');
    $('swfBox2').setStyle('display: inline;');
    //if(is_photo_open==false){
      $('swfBox1').setStyle('display: none;');
    //}
    $('video_form').setStyle('display: none;');
  }
  return false;
}


var form_close = function(value) {
  if (value=='photo'){
    is_photo_open = false;
    $('swfBox1').setStyle('display: none;');
  }else if (value=='video'){
    $('video_form').setStyle('display: none;');
  }else if (value=='file'){
    is_file_open = false;
    $('swfBox2').setStyle('display: none;');
  }
  if (is_photo_open == false && is_file_open ==false && value != "video"){
    $('swfupButtons').setStyle('display: none;');
  }
  return false;
}


var comment_form_change = function(value,id) {
  if (value=='photo'){
    $('photoCommentForm' + id).setStyle('display: inline;');
    $('fileCommentForm' + id).setStyle('display: none;');
    $('videoCommentForm' + id).setStyle('display: none;');
  }else if (value=='video'){
    $('videoCommentForm' + id).setStyle('display: inline;');
    $('photoCommentForm' + id).setStyle('display: none;');
    $('fileCommentForm' + id).setStyle('display: none;');
  }else if (value=='file'){
    is_file_open = true;
    $('fileCommentForm' + id).setStyle('display: inline;');
    $('photoCommentForm' + id).setStyle('display: none;');
    $('videoCommentForm' + id).setStyle('display: none;');
  }
  return false;
}


var comment_form_close = function(value,id) {
  if (value=='photo'){
    $('photoCommentForm' + id).setStyle('display: none;');
  }else if (value=='video'){
    $('videoCommentForm' + id).setStyle('display: none;');
  }else if (value=='file'){
    $('fileCommentForm' + id).setStyle('display: none;');
  }
  return false;
}

var swfu1 = null;
var swfu2 = null;
var form_kind = "conference";
var fileSizeLimit = '<%=@project.post_file_limit_show%>';
var limit = parseInt(fileSizeLimit);

function my_submit(){
  var targetField = [];
  var targetMessage = [];
  targetField.push($('thread_title').value);
  //var frame = $('thread_body').nextSibling.getElementsByTagName('iframe')[0];
  //var bodyText =  frame.contentDocument.body.innerHTML;
  var bodyText =  $('thread_body').value;
  targetField.push(bodyText);
  targetMessage.push("タイトルが入力されていません。");
  targetMessage.push("本文が入力されていません。");

  var validate = true;
  var alertArr = [];
  for (var i = 0; i < targetField.length; i++) {
    if(isBlanckCheck(targetField[i])==true){
      validate = false;
      alertArr.push(targetMessage[i]);
    }
  }
  var p_parentNode = $('photoID');
  var photoIdFields = p_parentNode.getElementsByTagName('input');
  if(photoIdFields.length > 5 ){
    validate = false;
    alertArr.push("フォトは最大5件までしか登録できません。");
  }
  var f_parentNode = $('fileID');
  var photoIdFields = f_parentNode.getElementsByTagName('input');
  if(photoIdFields.length > 5 ){
    validate = false;
    alertArr.push("ファイルは最大5件までしか登録できません。");
  }

  /*var video_url = $('video_url').value;
  var width = $("video_width").value;
  var height = $("video_height").value;
  if(video_url != ""){
    if (width == ""){
      validate=false;
      alertArr.push("動画のサイズを入力してください。");
    }
    if(height == ""){
      validate=false;
      alertArr.push("動画のサイズを入力してください。");
    }
  }*/
  var fileCheck = fileSizeSum('uploadedFiles');
  if (fileCheck == false){
    validate = false;
    alertArr.push("ファイル容量制限をオーバーしています。一投稿あたり" + fileSizeLimit + "MB以内としてください。");
  }
  if (validate){
    return true;
  }else{
    var alertMessage= "";
    for(var n =0; n < alertArr.length; n++){
      alertMessage +=  alertArr[n];
      if(n != alertArr.length - 1){
        alertMessage += "\n"
      }
    }
    alert(alertMessage);
    return false;
  }
}

function isBlanckCheck(str){
  if (!str.match(/\S/g)) {
    return true;
  }else if(str=="コメントする"){
    return true;
  }else if (str.match(/\A[\n\r]+\z/)) {
    return true;
  }else if (str.match(/\A\s+(<br>|<br\>)+\z/)) {
    return true;
  }else if (str=='<br>'){
    return true;
  }else if (str=='<br data-mce-bogus="1">'){
    return true;
  }else if (str.match(/\A\s+(<br>|<br data-mce-bogus=\"1\">)+\z/)){
     return true;
  }else {
    return false;
  }
}



function fileSizeSum(fieldId){
  var parent = $(fieldId);
  if (parent.innerHTML==""){
    return true;
  }
  var fileSize = 0;
  var getSize = 0;
  var option;
  var targetField = parent.getElementsByTagName('a');
  for (var i=0; i < targetField.length; i++) {
   option = targetField[i].innerHTML;
    if(option.match(/\(([0-9]+([\.]{1}[0-9]+)?)KBytes\)/)){
      getSize = parseFloat(RegExp.$1);
      fileSize +=  getSize * 1024;
    }else if(option.match(/\(([0-9]+([\.]{1}[0-9]+)?)MBytes\)/)){
      getSize = parseFloat(RegExp.$1);
      fileSize +=  getSize * 1024 * 1024;
    }else if(option.match(/\(([0-9]+([\.]{1}[0-9]+)?)Bytes\)/)){
      getSize = parseFloat(RegExp.$1);
      fileSize +=  getSize;
    }
  }
  if (fileSize >= limit * 1024 * 1024){
    return false;
  }else{
    return true;
  }

}

function numCheck(field){
  if(field.value==""){
    return true;
  }
  if(field.value.match(/[0-9]+/)){
    return true;
  }else{
    alert("数値以外が入力されています！");
    return true;
  }
}

function numCheck(field){
  if(field.value==""){
    return true;
  }
  if(field.value.match(/[0-9]+/)){
    return true;
  }else{
    alert("数値以外が入力されています！");
    return true;
  }
}
var my_load = function() {
 //form_change(0);
}
my_load();window.onload = function(){
  initSwfupload(swfu1,swfu2);
  initTinyMCE();
}


//file uploader
function initSwfupload(swfu1,swfu2) {
  swfu1 = new SWFUpload({
    upload_url : "<%= sns_uploads_path %>",
    post_params: {
      authenticity_token : "<%= form_authenticity_token %>",
      core_profile_id : "<%= Core.profile.id%>",
      album_kind : "feed",
      form_kind : "conference_photo",
      total_size_limit : "10 MB",
      project_id : "<%=@project.id%>",
      group_id : "<%=Core.user_group.id%>",
    },
    flash_url : "/_common/js/swfupload/swfupload.swf",
    file_post_name : "upload",
    file_size_limit : "10 MB",
    file_types : "*.*",
    file_types_description : "All Files",
    file_upload_limit : 0,
    file_queue_limit : 0,
    custom_settings : {
      progressTarget : "fsUploadProgress",
      cancelButtonId : "btnCancel1"
    },
    debug: false,
    prevent_swf_caching : false,
    button_image_url: "/_common/themes/admin/sns/images/bt/bt_f_newphoto.png",
    button_width: "99",
    button_height: "24",
    button_placeholder_id: "spanButtonPlaceHolder1",//"uploadHtml",
    button_window_mode : SWFUpload.WINDOW_MODE.OPAQUE,
    //file_dialog_complete_handler : function(numFilesSelected, numFilesQueued) { this.startUpload(); },
    //upload_error_handler : function(file, errorCode, message){ alert('読み込みに失敗しました。'); },
    //upload_success_handler : function(file, data, response) { tinyMCE.activeEditor.setContent(data); }
    file_queued_handler : fileQueued,
    file_queue_error_handler : fileQueueError,
    file_dialog_complete_handler : fileDialogComplete,
    upload_start_handler : uploadStart,
    upload_progress_handler : uploadProgress,
    upload_error_handler : uploadError,
    //upload_success_handler : uploadSuccess,
    upload_success_handler : function(file, data) {
      var progress = new FileProgress(file, this.customSettings.progressTarget);
      progress.setComplete();
      progress.setStatus("Complete.");
      progress.toggleCancel(false);
      if (data.match(/^Error/i) != null) {
        alert(data);
      } else {
        var id = '', name = '', size = '', image_is = '', filename = '';
        if (data.match(/^OK:(.+):(.+):(.+?):(.?):(.+?)$/)) {
          id = RegExp.$1;
          name = RegExp.$2;
          size = RegExp.$3;
          image_is = RegExp.$4;
          filename = RegExp.$5;
        }
        addUploadedFile(id, name, size, image_is, filename);
      }
    },
    upload_complete_handler : uploadComplete,
    queue_complete_handler : queueComplete  // Queue plugin event
  });

  swfu2 = new SWFUpload({
    upload_url : "<%= sns_uploads_path %>",
    post_params: {
      authenticity_token : "<%= form_authenticity_token %>",
      core_profile_id : "<%= Core.profile.id%>",
      album_kind : "feed",
      form_kind : "conference_file",
      total_size_limit : "10 MB",
      project_id : "<%=@project.id%>",
      group_id : "<%=Core.user_group.id%>",
    },
    flash_url : "/_common/js/swfupload/swfupload.swf",
    file_post_name : "upload",
    file_size_limit : "10 MB",
    file_types : "*.*",
    file_types_description : "All Files",
    file_upload_limit : 0,
    file_queue_limit : 0,
    custom_settings : {
      progressTarget : "fsUploadProgress2",
      cancelButtonId : "btnCancel2"
    },
    debug: false,
    prevent_swf_caching : false,
    button_image_url: "/_common/themes/admin/sns/images/bt/bt_f_newfile.png",
    button_width: "99",
    button_height: "24",
    button_placeholder_id: "spanButtonPlaceHolder2",//"uploadHtml",
    button_window_mode : SWFUpload.WINDOW_MODE.OPAQUE,
    //file_dialog_complete_handler : function(numFilesSelected, numFilesQueued) { this.startUpload(); },
    //upload_error_handler : function(file, errorCode, message){ alert('読み込みに失敗しました。'); },
    //upload_success_handler : function(file, data, response) { tinyMCE.activeEditor.setContent(data); }
    file_queued_handler : fileQueued,
    file_queue_error_handler : fileQueueError,
    file_dialog_complete_handler : fileDialogComplete,
    upload_start_handler : uploadStart,
    upload_progress_handler : uploadProgress,
    upload_error_handler : uploadError,
    //upload_success_handler : uploadSuccess,
    upload_success_handler : function(file, data) {
      var progress = new FileProgress(file, this.customSettings.progressTarget);
      progress.setComplete();
      progress.setStatus("Complete.");
      progress.toggleCancel(false);
      if (data.match(/^Error/i) != null) {
        alert(data);
      } else {
        var id = '', name = '', size = '', image_is = '', filename = '';
        if (data.match(/^OK:(.+):(.+):(.+?):(.?):(.+?)$/)) {
          id = RegExp.$1;
          name = RegExp.$2;
          size = RegExp.$3;
          image_is = RegExp.$4;
          filename = RegExp.$5;
        }
        addUploadedFile(id, name, size, image_is, filename);
      }
    },
    upload_complete_handler : uploadComplete,
    queue_complete_handler : queueComplete  // Queue plugin event
  });

}

// load uploaded files
function loadUploadedFiles() {
  var uri = "<%= sns_uploads_path(:format => 'xml') %>";
  var myAjax = new Ajax.Request(uri, {
    method: 'get',
    onSuccess: showUploadedFiles,
    onFailure: function(request) { alert('送信に失敗しました。'); }
  });
}
function showUploadedFiles(request) {
  var html  = "";
  var items = request.responseXML.getElementsByTagName("item");
  for (var i = 0; i < items.length; i++) {
    var item = items[i];
    var id   = getNodeValue(item, 'id');
    var name = getNodeValue(item, 'name');
    var size = getNodeValue(item, 'eng_unit');
    var image_is = getNodeValue(item, 'image_is');
    addUploadedFile(id, name, size, image_is);
  }
}
function getNodeValue(node, name) {
  var elem = node.getElementsByTagName(name);
  if (elem && elem[0] && elem[0].firstChild) {
    return elem[0].firstChild.nodeValue;
  }
  return "";
}
function addUploadedFile(id, name, size, image_is, filename) {
  var field = $('uploadedFiles');
  if (field.visible() == false) { field.show(); }
  var sepa = ""; //(field.innerHTML == "") ? '' : '<span class="uploadedFileSeparator"></span>';
  var icon = "iconFile icon" + name.replace(/.*\./, '').capitalize();
  var sequence = filename.replace(/\..+/, '');
  var html = '<span id="uploadedFile' + id + '" class="uploadedFile">' + sepa;
  var uri = '';
  var linkUri = '';
  if (image_is == '1'){
    uri =  '/_admin/_photos/' + filename;
    linkUri = '/_admin/_photos/' + filename + '?mode=download';
  }else{
    uri =  '/_admin/_files/' + filename;
    linkUri = uri;
  }
  var opt = '';
  if (image_is == '1') {
    opt = 'target="_blank"';
  } else {
    opt = 'onclick="return downloadUploadedFile(this.href);"';
  }
  html += '<span id="uploadedShow'+ id +'"><a href="' + linkUri +'" class="uploadedFileName '+ icon + '" ' + opt + ' >' + name.escapeHTML() + "(" + size + ")" + '</a></span>';
  html += '<a href="#" onclick="return deleteUploadedFile(\'' + id + '\', \'' + image_is + '\')" title="削除" class="deleteUploadedFile">x</a>';
  html += '</span> ';
  field.innerHTML += html;
  if (image_is == '1') {
    var photoField = $('photoID');
    photo_html = '<input type="hidden" id="ids_" name="photoids[]" value="' + id + '">'
    photoField.innerHTML += photo_html;
  }else{
    var fileField = $('fileID');
    file_html = '<input type="hidden" id="ids_" name="fileids[]" value="' + id + '">'
    fileField.innerHTML += file_html;
  }
}
function downloadUploadedFile(uri) {
  var beforeUnloadFunc = window.onbeforeunload;
  window.onbeforeunload = function() {
    window.onbeforeunload = beforeUnloadFunc;
  };
  window.location.href = uri;
  return false;
}

function insertUploadedFile(id,image_is,paste,uri) {
  var elm = $('uploadedShow' + id);
  var insertHtml = '';
  if (paste=='1'){
    insertHtml = '<img src=\'' + uri + '\' />'
  }else{
    insertHtml = elm.innerHTML;
  }
  mceInsertContent(insertHtml);
  return false;
}

function mceInsertContent(value) {
  parent.tinyMCE.execInstanceCommand('thread_body','mceInsertContent',true, value);
}

function deleteUploadedFile(id,image_is) {
  var elm = $('uploadedFile' + id);
  var uri = "<%= sns_uploads_path %>/" + id + '.xml?kind=' + form_kind + '&image_is=' + image_is ;
  var myAjax = new Ajax.Request(uri, {
    method: 'post',
    parameters: "_method=delete&authenticity_token=<%= form_authenticity_token %>",
    onComplete: deletedUploadedFile,
    onFailure: function(request) { alert('送信に失敗しました。'); }
  });
  removeIdField(id,image_is);
  return false;
}


function deletedUploadedFile(request) {
  var id  = request.responseText.replace(/^OK /, '');
  var elm = $('uploadedFile' + id);
  if (elm) { elm.remove(); }
  var field = $('uploadedFiles');
  field.innerHTML = field.innerHTML.replace(/> +</, '> <');
  if (field.innerHTML.match(/^ *$/) != null) {
    field.innerHTML = "";
    field.hide();
  }
}

function removeIdField(id,image_is){
  if (image_is=='1'){
    var parent = document.getElementById("photoID");
  }else{
    var parent = document.getElementById("fileID");
  }
  var targetField = parent.getElementsByTagName('input');
  for (var i=0; i < targetField.length; i++) {
   option = targetField [i];
   if(option.value==id){
     option.remove();
   }
  }
}
function insertUploadedFileInline(id,image_is,paste,uri,parentId) {
  var elm = $('uploadedShow' + id);
  var insertHtml = '';
  if (paste=='1'){
    insertHtml = '<img src=\'' + uri + '\' />'
  }else{
    insertHtml = elm.innerHTML;
  }
  mceInsertContentInline(insertHtml,parentId);
  return false;
}

function mceInsertContentInline(value,parentId) {
  var replyBodyId =  'comment_body_' + parentId;
  parent.tinyMCE.execInstanceCommand(replyBodyId,'mceInsertContent',true, value);
}

function deleteUploadedFileInline(id,image_is,parentId) {
  var elm = document.getElementById('uploadedFile' + id);
  var uri = "<%= sns_uploads_path %>/" + id + '.xml?kind=' + form_kind + '&image_is=' + image_is ;
  var myAjax = new Ajax.Request(uri, {
    method: 'post',
    parameters: "_method=delete&authenticity_token=<%= form_authenticity_token %>",
    onComplete: deletedUploadedFile,
    onFailure: function(request) { alert('送信に失敗しました。'); }
  });
  removeIdFieldInline(id,image_is,parentId);
  return false;
}


function removeIdFieldInline(id,image_is,parentId){
  if (image_is=='1'){
    var parent = document.getElementById("photoID" + parentId);
  }else{
    var parent = document.getElementById("fileID" + parentId);
  }
  var targetField = parent.getElementsByTagName('input');
  for (var i=0; i < targetField.length; i++) {
   option = targetField [i];
   if(option.value==id){
     option.remove();
   }
  }
}

</script>
